name: Verifications

on:
  pull_request:
    branches: 
      - release/dev
      - release/test
      - release/prod

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  ui_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./UI
    strategy:
      matrix:
        node-version: [16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
          npm ci

      # build and test the apps
      - name: build
        run: |
          npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      # lint the code
      - name: Lint code
        run: npm run lint

      # run e2e tests
      - name: Run E2E tests
        run: npm run test-e2e:ci
        env:
          URL: http://localhost:4200

      # run unit tests
      - name: Run unit tests
        run: npm run test-unit:ci
    
  smart_contract_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./SmartContracts
    strategy:
      matrix:
        node-version: [18.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          npm install
          npm ci

      # compile the smart contracts
      - name: compile
        run: |
          npm run compile

      # generate abis
      - name: generate abis
        run: |
          npm run abi

      # unit test
      - name: Start node and run tests
        run: |
          npm run node &
          NODE_PID=$!
          # Give the node process some time to start up. Adjust this time as needed.
          sleep 10
          npm run test
          # Kill the node process after tests
          kill $NODE_PID
